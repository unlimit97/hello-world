# This is a basic workflow to help you get started with Actions

name: CI-Blackduck

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
   runs-on: [ubuntu-latest]
#    runs-on: [self-hosted, Windows, kiran]
#    runs-on: [self-hosted, Linux, kishor-linux]

   env:
     MAC_BRIDGE_URL: "https://sig-repo.synopsys.com/artifactory/bds-integrations-release/com/synopsys/integration/synopsys-action/0.1.72/ci-package-0.1.72-macosx.zip"
     LINUX_BRIDGE_URL: "https://sig-repo.synopsys.com/artifactory/bds-integrations-release/com/synopsys/integration/synopsys-action/0.1.72/ci-package-0.1.72-linux64.zip"
     WINDOWS_BRIDGE_URL: "https://sig-repo.synopsys.com/artifactory/bds-integrations-release/com/synopsys/integration/synopsys-action/0.1.72/ci-package-0.1.72-win64.zip"

    # Steps represent a sequence of tasks that will be executed as part of the job
   steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Use synopsys unified-action - blackduck-detect
       # Use the action defined in this repository
        uses: ./
        with:
          blackduck_url: ${{ secrets.BLACKDUCK_URL }}
          blackduck_apiToken: ${{ secrets.BLACKDUCK_API_TOKEN }}
          blackduck_scan_full: true
          blackduck_install_directory: /home/runner/synopsys-bridge/
          blackduck_scan_failure_severities: "[\"BLOCKER\", \"CRITICAL\", \"TRIVIAL\"]"
          bridge_download_url: ${{ env.LINUX_BRIDGE_URL }}
